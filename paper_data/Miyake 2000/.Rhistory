x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)),
std.lv = F, estimator = 'ML', information = 'observed')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)),
std.lv = F, estimator = 'ML', information = 'observed')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)),
std.lv = F, estimator = 'ML', information = 'observed')
summary(fit)
return(reliability(fit)['omega3',])
reliability(fit)['omega3',]
reliability(fit)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'bootstrap')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'first.order')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
summary(fit)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', ridge = .01)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', ridge = .01)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', ridge = .01)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', ridge = .01)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', ridge = .01)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', ridge = .01)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', ridge = .01)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', ridge = .01)
summary(fit)
?reliability
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'WLSMV', information = 'expected',
se = 'standard', ridge = .01)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)),
std.lv = T, estimator = 'WLSMV', information = 'expected',
se = 'standard', ridge = .01)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)),
std.lv = T, estimator = 'WLSMV', information = 'expected',
se = 'standard', ridge = .01)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)),
std.lv = T, estimator = 'WLSMV', information = 'expected',
se = 'standard', ridge = .01)
setwd('/Users/areshenk/Downloads/Adult CFA 2/Fournier-Vicente 2008')
setwd('/Users/areshenk/Downloads/Adult CFA 2/Fournier-Vicente 2008')
setwd('/Users/areshenk/Downloads/Adult CFAs 2/Fournier-Vicente 2008')
file = 'FournierVicente2008'
file = 'FournierVicente2008'
data = factorMaImport(paste(file, '.txt', sep = ''),
c(1:6, 11, 13, 12, 14, 16, 17, 18, 19, 20), N = 180)
data = factorMaImport(paste(file, '.txt', sep = ''),
c(1:6, 11, 13, 12, 14, 15, 16, 17, 18, 19), N = 180)
model <- '
General         =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x3 + x14 + x15 + x16 + x17 + x18 + x19
VESPC           =~ x1 + x2 + x3
VSSPC           =~ x4 + x5 + x6
SR              =~ x7 + x8 + x9
SA              =~ x10 + x11 + x12
SH              =~ x13 + x14 + x15
'
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
model <- '
General         =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x3 + x14 + x15
VESPC           =~ x1 + x2 + x3
VSSPC           =~ x4 + x5 + x6
SR              =~ x7 + x8 + x9
SA              =~ x10 + x11 + x12
SH              =~ x13 + x14 + x15
'
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
# Specify Model
model <- '
General         =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x3 + x14 + x15
VESPC           =~ x1 + x2 + x3
VSSPC           =~ x4 + x5 + x6
SR              =~ x7 + x8 + x9
SA              =~ x10 + x11 + x12
SH              =~ x13 + x14 + x15
General         ~~ 0 * VESPC
General         ~~ 0 * VSSPC
General         ~~ 0 * SR
General         ~~ 0 * SA
General         ~~ 0 * SH
VESPC           ~~ 0 * VSSPC
VESPC           ~~ 0 * SR
VESPC           ~~ 0 * SA
VESPC           ~~ 0 * SH
VSSPC           ~~ 0 * SR
VSSPC           ~~ 0 * SA
VSSPC           ~~ 0 * SH
SR              ~~ 0 * SA
SR              ~~ 0 * SH
SA              ~~ 0 * SH
'
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
model <- '
VESPC           =~ x1 + x2 + x3
VSSPC           =~ x4 + x5 + x6
SR              =~ x7 + x8 + x9
SA              =~ x10 + x11 + x12
SH              =~ x13 + x14 + x15
'
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard', orthogonal = TRUE)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
reliability(fit)['omega3',]
# Specify Model
model <- '
VESPC           =~ x1 + x2 + x3
VSSPC           =~ x4 + x5 + x6
SR              =~ x7 + x8 + x9
SA              =~ x10 + x11 + x12
SH              =~ x13 + x14 + x15
General         ~~ 0 * VESPC
General         ~~ 0 * VSSPC
General         ~~ 0 * SR
General         ~~ 0 * SA
General         ~~ 0 * SH
VESPC           ~~ 0 * VSSPC
VESPC           ~~ 0 * SR
VESPC           ~~ 0 * SA
VESPC           ~~ 0 * SH
VSSPC           ~~ 0 * SR
VSSPC           ~~ 0 * SA
VSSPC           ~~ 0 * SH
SR              ~~ 0 * SA
SR              ~~ 0 * SH
SA              ~~ 0 * SH
'
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
model <- '
General         =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9 + x10 + x11 + x12 + x3 + x14 + x15
VESPC           =~ x1 + x2 + x3
VSSPC           =~ x4 + x5 + x6
SR              =~ x7 + x8 + x9
SA              =~ x10 + x11 + x12
SH              =~ x13 + x14 + x15
General         ~~ 0 * VESPC
General         ~~ 0 * VSSPC
General         ~~ 0 * SR
General         ~~ 0 * SA
General         ~~ 0 * SH
VESPC           ~~ 0 * VSSPC
VESPC           ~~ 0 * SR
VESPC           ~~ 0 * SA
VESPC           ~~ 0 * SH
VSSPC           ~~ 0 * SR
VSSPC           ~~ 0 * SA
VSSPC           ~~ 0 * SH
SR              ~~ 0 * SA
SR              ~~ 0 * SH
SA              ~~ 0 * SH
'
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
model <- '
VESPC           =~ x1 + x2 + x3
VSSPC           =~ x4 + x5 + x6
SR              =~ x7 + x8 + x9
SA              =~ x10 + x11 + x12
SH              =~ x13 + x14 + x15
'
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), likelihood = 'normal',
std.lv = T, estimator = 'ML', information = 'expected',
se = 'standard')
summary(fit)
eval(fit)
summary(fit)
fit
summary(fit)
print(fit)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), mimic = 'Mplus')
summary(fit)
summary(fit, rsq=T)
inspect(fit)
show(fit)
summary(fit, fit.measures = T)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), mimic = 'Mplus')
summary(fit, fit.measures = T)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), mimic = 'Mplus')
summary(fit, fit.measures = T)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)), mimic = 'Mplus')
summary(fit, fit.measures = T)
y = summary(fit, fit.measures = T)
y = summary(fit, fit.measures = T, standardized = T)
fit = cfa(sample.cov = data$Sigma, sample.mean = data$Mean, mimic = 'Mplus')
fit = cfa(model, sample.cov = data$Sigma, sample.mean = data$Mean, mimic = 'Mplus')
fit = cfa(model, sample.cov = data$Sigma, sample.nobs = 180,
sample.mean = data$Mean, mimic = 'Mplus')
y = summary(fit, fit.measures = T, standardized = T)
reliability(fit)['omega3',]
setwd('/Users/areshenk/Downloads/Adult CFAs/Was 2007')
file = 'Was2007'
data = factorMaImport(paste(file, '.txt', sep = ''), 1:6, N = 188)
K = 1000
boot = sapply(1:K, function(x) tryCatch(modelFit(model, data),
error = function(e) NA,
warning = function(w) NA))
bootFrame = data.frame(do.call(rbind, boot))
source('modelFit.R')
boot = sapply(1:K, function(x) tryCatch(modelFit(model, data),
error = function(e) NA,
warning = function(w) NA))
# Specify Model
model <- '
General         =~ x1 + x2 + x3 + x4 + x5 + x6
Updating        =~ x1 + x2 + x3
Inhibition      =~ x4 + x5 + x6
General         ~~ 0 * Updating
General         ~~ 0 * Inhibition
Updating        ~~ 0 * Inhibition
'
K = 1000
boot = sapply(1:K, function(x) tryCatch(modelFit(model, data),
error = function(e) NA,
warning = function(w) NA))
bootFrame = data.frame(do.call(rbind, boot))
View(bootFrame)
dummyFrame = gather(bootFrame, Factor, Omega)
dummyFrame$Study = file
studyFrame = ddply(dummyFrame, .(Study, Factor), summarize,
Mean.Logit = mean(logit(Omega), na.rm = T),
SE.Logit = sd(logit(Omega), na.rm = T),
Mean = mean(Omega, na.rm = T),
SE = sd(Omega, na.rm = T))
setwd('/Users/areshenk/Downloads/Adult CFAs 2/Miyake 2000')
library(lavaan)
library(MASS)
library(boot)
library(tidyr)
library(semTools)
library(plyr)
source('factorMaImport.R')
source('modelFit.R')
file = 'Miyake2000'
data = factorMaImport(paste(file, '.txt', sep = ''),
1:9, N = 137)
uni_model <- '
General         =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9
'
multi_model <- '
Shift           =~ x1 + x2 + x3
Update          =~ x4 + x5 + x6
Inhibit         =~ x7 + x8 + x9
'
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
means = colMeans(x)
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
fit = cfa(model, data = data.frame(scale(x)),
std.lv = F,
mimic = 'Mplus',
start = 'Mplus')
multi_model <- '
Shift           =~ x1 + x2 + x3
Update          =~ x4 + x5 + x6
Inhibit         =~ x7 + x8 + x9
'
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
means = colMeans(x)
Sigma = cov(x)
View(Sigma)
means = colMeans(x)
Sigma = cov(x)
fit = cfa(model, sample.cov = Sigma, sample.mean = means, sample.nobs = data$N,
std.lv = F,
mimic = 'Mplus',
start = 'Mplus')
fit = cfa(multi_model, sample.cov = Sigma, sample.mean = means,
sample.nobs = data$N,
std.lv = F,
mimic = 'Mplus',
start = 'Mplus')
reliability(fit)['omega3',]
summary(fit, sit.measures = T)
summary(fit, fit.measures = T)
fitMeasures(fit)
fitMeasures(fit)$cfi
fitMeasures(fit)$afi
fitMeasures(fit)[1]
fitMeasures(fit)
fitMeasures(fit)[c(5,9,23)]
K = 1000
boot = sapply(1:K, function(x) tryCatch(modelFit(multi_model, data),
error = function(e) NA,
warning = function(w) NA))
bootFrame = data.frame(do.call(rbind, boot))
View(bootFrame)
which(is.na(bootFrame[,1]))
View(bootFrame)
modelFit = function(model, data){
x = data.frame(mvrnorm(n = data$N, mu = data$means, Sigma = data$Sigma))
means = colMeans(x)
Sigma = cov(x)
fit = cfa(model, sample.cov = Sigma, sample.mean = means,
sample.nobs = data$N,
std.lv = F,
mimic = 'Mplus',
start = 'Mplus')
return(c(reliability(fit)['omega3',], fitMeasures(fit)[c(5,9,23)]))
}
boot = sapply(1:K, function(x) tryCatch(modelFit(multi_model, data),
error = function(e) NA,
warning = function(w) NA))
which(is.na(bootFrame[,1]))
which(is.na(bootFrame[,1]))
bootFrame = data.frame(do.call(rbind, boot))
View(bootFrame)
hist(bootFrame$cfi)
bootFrame = bootFrame[-which(is.na(bootFrame[,1])),]
length(which(bootFrame$cfi > .95))/dim(bootFrame)[1]
length(which(bootFrame$pvalue > .05))/dim(bootFrame)[1]
length(which(bootFrame$pvalue > .05))/dim(bootFrame)[1]
hist(bootFrame$pvalue)
hist(bootFrame$rmsea)
hist(bootFrame$cfi)
hist(bootFrame$rmsea)
length(which(bootFrame$rmsea < .05))/dim(bootFrame)[1]
length(which(bootFrame$rmsea < .08))/dim(bootFrame)[1]
multi_bootFrame = bootFrame
boot = sapply(1:K, function(x) tryCatch(modelFit(uni_model, data),
error = function(e) NA,
warning = function(w) NA))
bootFrame = data.frame(do.call(rbind, boot))
bootFrame = bootFrame[-which(is.na(bootFrame[,1])),]
hist(bootFrame$cfi)
length(which(bootFrame$cfi > .95))/dim(bootFrame)[1]
length(which(bootFrame$pvalue > .05))/dim(bootFrame)[1]
plot(bootFrame$rmsea, bootFrame$cfi)
plot(bootFrame$pvalue, bootFrame$cfi)
plot(bootFrame$pvalue, bootFrame$cfi, xlim = c(0,.1))
plot(bootFrame$pvalue, bootFrame$cfi, xlim = c(0,.05))
plot(bootFrame$pvalue, bootFrame$rmsea, xlim = c(0,.05))
plot(bootFrame$pvalue, bootFrame$rmsea
)
